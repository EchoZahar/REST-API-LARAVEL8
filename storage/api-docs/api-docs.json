{
    "openapi": "3.0.0",
    "info": {
        "title": "Question API swagger documentation",
        "contact": {
            "email": "echo.zahar@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "/api/",
            "description": "Demo tech task API server"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Auth Api"
                ],
                "summary": "Register new user",
                "description": "Returns question data",
                "operationId": "RegisterNewUser",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "enter your email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "enter your eamil",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "enter your password",
                        "schema": {
                            "type": "text"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful registration"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth Api"
                ],
                "summary": "login user",
                "description": "Returns question data",
                "operationId": "LoginUser",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "enter your eamil",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "enter your password",
                        "schema": {
                            "type": "password"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful registration"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth Api"
                ],
                "summary": "logout user",
                "description": "Returns question data",
                "operationId": "Logged",
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful registration"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/questions": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "Получение всех обращении с использоваение простой пагинаций, по 3 обращения (simplePaginate(3))",
                "operationId": "QuestionAll",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Пагинация по страницам",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "200": {
                        "description": "An example resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "Questions"
                ],
                "summary": "Сохранение новой заявки от пользователя",
                "description": "Store a newly created resource in storage.",
                "operationId": "storeQuestion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuestionStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Обращение успешно добавлено."
                    },
                    "201": {
                        "description": "Обращение успешно добавлено."
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "419": {
                        "description": "Undocumented, стек срок действия страницы."
                    }
                }
            }
        },
        "/questions/{id}": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "Показать запись по id",
                "description": "Display the specified resource.",
                "operationId": "getQuestionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Question ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Что то, пошло не так, записи не нсйдено."
                    },
                    "200": {
                        "description": "Данные успешно, загружены."
                    }
                }
            },
            "put": {
                "tags": [
                    "Questions"
                ],
                "summary": "Обновление записи. Добавить ответ от администратора",
                "description": "Update the specified resource in storage.",
                "operationId": "questionUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Метод обновления, по id записи.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuestionUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Обращение успешно добавлено."
                    },
                    "202": {
                        "description": "Запись успешно обновлена"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "не авторизован"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Что то пошло не так, запись не найдена."
                    },
                    "419": {
                        "description": "Undocumented, стек срок действия страницы."
                    }
                },
                "security": [
                    {
                        "api_id": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Questions"
                ],
                "summary": "Мягкое удаление (из БД не удаляется) обращения",
                "description": "Remove the specified resource from storage.",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Question id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Запись успешно удалена",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Что то пошло не так, запись не найдена."
                    }
                },
                "security": [
                    {
                        "api_id": []
                    }
                ]
            }
        },
        "/questions/search/{name}": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "поиск по имени пользователя составивщего заявку",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "поиск по имени пользователя составивщего заявку",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "не найдено"
                    },
                    "200": {
                        "description": "статус 'ОК'"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "QuestionStoreRequest": {
                "title": "сохранение обращения пользователя",
                "description": "создание новой записи, заявка от пользователя",
                "properties": {
                    "name": {
                        "title": "имя пользователя",
                        "description": "Нужно ввести имя пользователя. Обязательное поле, минимальная длина 2, максимальное 50.",
                        "type": "string",
                        "format": "string",
                        "example": "Customer"
                    },
                    "email": {
                        "title": "email пользователя.",
                        "description": "email пользователя. Обязателеное поле, минимальная длина 5, максимальная 100. ",
                        "type": "string",
                        "format": "string",
                        "example": "customer@example.com"
                    },
                    "message": {
                        "title": "сообщение от пользователя.",
                        "description": "сообщение, обращение пользователя, обязателеное поле с максимальным значением 500.",
                        "type": "string",
                        "format": "string",
                        "example": "Мое сообщение ..........."
                    },
                    "status": {
                        "title": "Статус записи",
                        "description": "По умолчанию статус записи, будет активным.",
                        "type": "string",
                        "format": "string",
                        "example": "active"
                    }
                },
                "type": "object"
            },
            "QuestionUpdateRequest": {
                "title": "Ответ пользователю от администратору.",
                "description": "Обновление записи, заявка от пользователя",
                "properties": {
                    "comment": {
                        "title": "Ответ пользователю от администратора.",
                        "description": "Введите ответ пользователю, минимальная длина 5,  максимальная 500 символов.",
                        "type": "string",
                        "format": "string",
                        "example": "какой то, текст."
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "X-CSRF-TOKEN": {
                "type": "apiKey",
                "name": "X-CSRF-TOKEN",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Questions",
            "description": "Раздел создания обращения, ответа пользователю, обновление и удаления."
        },
        {
            "name": "Auth Api",
            "description": "API: Регистрация, вход, выход получение и удаление токена."
        }
    ],
    "security": [
        []
    ]
}